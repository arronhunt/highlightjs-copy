{
  "version": 3,
  "sources": ["../index.js"],
  "sourcesContent": ["/**\n *  @file highlight-copy.js\n *  @author Arron Hunt <arronjhunt@gmail.com>\n *  @copyright Copyright 2021. All rights reserved.\n */\n\n/**\n * Adds a copy button to highlightjs code blocks\n */\nclass CopyButtonPlugin {\n  /**\n   * Create a new CopyButtonPlugin class instance\n   * @param {Object} [options] - Functions that will be called when a copy event fires\n   * @param {CopyCallback} [options.callback]\n   * @param {Hook} [options.hook]\n   * @param {String} [options.lang] Defaults to the document body's lang attribute and falls back to \"en\"\n   */\n  constructor(options = {}) {\n    self.hook = options.hook;\n    self.callback = options.callback;\n    self.lang = options.lang || document.documentElement.lang || \"en\";\n  }\n  \"after:highlightElement\"({ el, text }) {\n    // Create the copy button and append it to the codeblock.\n    let button = Object.assign(document.createElement(\"button\"), {\n      innerHTML: locales[lang]?.[0] || \"Copy\",\n      className: \"hljs-copy-button\",\n    });\n    button.dataset.copied = false;\n    el.parentElement.classList.add(\"hljs-copy-wrapper\");\n    el.parentElement.appendChild(button);\n\n    // Add a custom proprety to the code block so that the copy button can reference and match its background-color value.\n    el.parentElement.style.setProperty(\n      \"--hljs-theme-background\",\n      window.getComputedStyle(el).backgroundColor\n    );\n\n    button.onclick = function () {\n      if (!navigator.clipboard) return;\n\n      let newText = text;\n      if (hook && typeof hook === \"function\") {\n        newText = hook(text, el) || text;\n      }\n\n      navigator.clipboard\n        .writeText(newText)\n        .then(function () {\n          button.innerHTML = locales[lang]?.[1] || \"Copied!\";\n          button.dataset.copied = true;\n\n          let alert = Object.assign(document.createElement(\"div\"), {\n            role: \"status\",\n            className: \"hljs-copy-alert\",\n            innerHTML: locales[lang]?.[2] || \"Copied to clipboard\",\n          });\n          el.parentElement.appendChild(alert);\n\n          setTimeout(() => {\n            button.innerHTML = locales[lang]?.[0] || \"Copy\";\n            button.dataset.copied = false;\n            el.parentElement.removeChild(alert);\n            alert = null;\n          }, 2000);\n        })\n        .then(function () {\n          if (typeof callback === \"function\") return callback(newText, el);\n        });\n    };\n  }\n}\n\nmodule.exports = CopyButtonPlugin;\n\n/**\n * Basic support for localization. Please submit a PR\n * to help add more languages.\n * https://github.com/arronhunt/highlightjs-copy/pulls\n */\nconst locales = {\n  en: [\"Copy\", \"Copied!\", \"Copied to clipboard\"],\n  es: [\"Copiar\", \"Copiado!\", \"Copiado al portapapeles\"],\n  fr: [\"Copier\", \"Copi\u00E9!\", \"Copi\u00E9 dans le presse-papier\"],\n  de: [\"Kopieren\", \"Kopiert!\", \"In die Zwischenablage kopiert\"],\n  ja: [\"\u30B3\u30D4\u30FC\", \"\u30B3\u30D4\u30FC\u3057\u307E\u3057\u305F\uFF01\", \"\u30AF\u30EA\u30C3\u30D7\u30DC\u30FC\u30C9\u306B\u30B3\u30D4\u30FC\u3057\u307E\u3057\u305F\"],\n  ko: [\"\uBCF5\uC0AC\", \"\uBCF5\uC0AC\uB428!\", \"\uD074\uB9BD\uBCF4\uB4DC\uC5D0 \uBCF5\uC0AC\uB428\"],\n  ru: [\"\u041A\u043E\u043F\u0438\u0440\u043E\u0432\u0430\u0442\u044C\", \"\u0421\u043A\u043E\u043F\u0438\u0440\u043E\u0432\u0430\u043D\u043E!\", \"\u0421\u043A\u043E\u043F\u0438\u0440\u043E\u0432\u0430\u043D\u043E \u0432 \u0431\u0443\u0444\u0435\u0440 \u043E\u0431\u043C\u0435\u043D\u0430\"],\n  zh: [\"\u590D\u5236\", \"\u5DF2\u590D\u5236!\", \"\u5DF2\u590D\u5236\u5230\u526A\u8D34\u677F\"],\n  \"zh-tw\": [\"\u8907\u88FD\", \"\u5DF2\u8907\u88FD!\", \"\u5DF2\u8907\u88FD\u5230\u526A\u8CBC\u7C3F\"],\n};\n\n/**\n * @typedef {function} CopyCallback\n * @param {string} text - The raw text copied to the clipboard.\n * @param {HTMLElement} el - The code block element that was copied from.\n * @returns {undefined}\n */\n/**\n * @typedef {function} Hook\n * @param {string} text - The raw text copied to the clipboard.\n * @param {HTMLElement} el - The code block element that was copied from.\n * @returns {string|undefined}\n */\n"],
  "mappings": "sFAAA,IAAAA,EAAAC,EAAA,CAAAC,EAAAC,IAAA,CASA,IAAMC,EAAN,KAAuB,CAQrB,YAAYC,EAAU,CAAC,EAAG,CACxB,KAAK,KAAOA,EAAQ,KACpB,KAAK,SAAWA,EAAQ,SACxB,KAAK,KAAOA,EAAQ,MAAQ,SAAS,gBAAgB,MAAQ,IAC/D,CACA,yBAAyB,CAAE,GAAAC,EAAI,KAAAC,CAAK,EAAG,CAtBzC,IAAAC,EAwBI,IAAIC,EAAS,OAAO,OAAO,SAAS,cAAc,QAAQ,EAAG,CAC3D,YAAWD,EAAAE,EAAQ,QAAR,YAAAF,EAAgB,KAAM,OACjC,UAAW,kBACb,CAAC,EACDC,EAAO,QAAQ,OAAS,GACxBH,EAAG,cAAc,UAAU,IAAI,mBAAmB,EAClDA,EAAG,cAAc,YAAYG,CAAM,EAGnCH,EAAG,cAAc,MAAM,YACrB,0BACA,OAAO,iBAAiBA,CAAE,EAAE,eAC9B,EAEAG,EAAO,QAAU,UAAY,CAC3B,GAAI,CAAC,UAAU,UAAW,OAE1B,IAAIE,EAAUJ,EACV,MAAQ,OAAO,MAAS,aAC1BI,EAAU,KAAKJ,EAAMD,CAAE,GAAKC,GAG9B,UAAU,UACP,UAAUI,CAAO,EACjB,KAAK,UAAY,CAhD1B,IAAAH,EAAAI,EAiDUH,EAAO,YAAYD,EAAAE,EAAQ,QAAR,YAAAF,EAAgB,KAAM,UACzCC,EAAO,QAAQ,OAAS,GAExB,IAAII,EAAQ,OAAO,OAAO,SAAS,cAAc,KAAK,EAAG,CACvD,KAAM,SACN,UAAW,kBACX,YAAWD,EAAAF,EAAQ,QAAR,YAAAE,EAAgB,KAAM,qBACnC,CAAC,EACDN,EAAG,cAAc,YAAYO,CAAK,EAElC,WAAW,IAAM,CA3D3B,IAAAL,EA4DYC,EAAO,YAAYD,EAAAE,EAAQ,QAAR,YAAAF,EAAgB,KAAM,OACzCC,EAAO,QAAQ,OAAS,GACxBH,EAAG,cAAc,YAAYO,CAAK,EAClCA,EAAQ,IACV,EAAG,GAAI,CACT,CAAC,EACA,KAAK,UAAY,CAChB,GAAI,OAAO,UAAa,WAAY,OAAO,SAASF,EAASL,CAAE,CACjE,CAAC,CACL,CACF,CACF,EAEAH,EAAO,QAAUC,EAOjB,IAAMM,EAAU,CACd,GAAI,CAAC,OAAQ,UAAW,qBAAqB,EAC7C,GAAI,CAAC,SAAU,WAAY,yBAAyB,EACpD,GAAI,CAAC,SAAU,YAAU,gCAA6B,EACtD,GAAI,CAAC,WAAY,WAAY,+BAA+B,EAC5D,GAAI,CAAC,qBAAO,mDAAY,4FAAiB,EACzC,GAAI,CAAC,eAAM,sBAAQ,mDAAW,EAC9B,GAAI,CAAC,+DAAc,sEAAgB,+IAA4B,EAC/D,GAAI,CAAC,eAAM,sBAAQ,4CAAS,EAC5B,QAAS,CAAC,eAAM,sBAAQ,4CAAS,CACnC",
  "names": ["require_highlightjs_copy", "__commonJSMin", "exports", "module", "CopyButtonPlugin", "options", "el", "text", "_a", "button", "locales", "newText", "_b", "alert"]
}
